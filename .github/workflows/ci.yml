name: YeuMoney Pro CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
    
    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Create test config
      run: |
        cp config.json.example config.json
    
    - name: Test imports and basic functionality
      run: |
        python -c "from src.core.config import config; print('Config loaded successfully')"
        python -c "from src.core.database import db; print('Database module loaded')"
        python -c "from src.models.models import User; print('Models loaded successfully')"
        python main.py --version
        python main.py --help

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t yeumoney-pro:test .
    
    - name: Test Docker image
      run: |
        docker run --rm yeumoney-pro:test python main.py --version

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan with bandit
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-report.json || true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: bandit-report.json

  deploy:
    runs-on: ubuntu-latest
    needs: [test, docker, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment package
      run: |
        tar -czf yeumoney-pro-${{ github.sha }}.tar.gz \
          --exclude='.git*' \
          --exclude='__pycache__' \
          --exclude='*.pyc' \
          --exclude='logs/*' \
          --exclude='*.db' \
          .
    
    - name: Upload deployment artifact
      uses: actions/upload-artifact@v3
      with:
        name: yeumoney-pro-deployment
        path: yeumoney-pro-${{ github.sha }}.tar.gz
